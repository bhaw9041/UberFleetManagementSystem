/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.UberFleet;

/**
 *
 * @author vaibhavsingh
 */
public class QueryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form QueryJPanel
     */
    private UberFleet uberFleet;
    public QueryJPanel(UberFleet uberFleet) {
        this.uberFleet = uberFleet;
        initComponents();
        this.hideAllInputs();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        question_1 = new javax.swing.JButton();
        question2 = new javax.swing.JButton();
        question3 = new javax.swing.JButton();
        question4 = new javax.swing.JButton();
        question5 = new javax.swing.JButton();
        question6 = new javax.swing.JButton();
        question7 = new javax.swing.JButton();
        question8 = new javax.swing.JButton();
        question9 = new javax.swing.JButton();
        submitQuery = new javax.swing.JButton();
        manufacturedYear = new javax.swing.JTextField();
        minSeat = new javax.swing.JTextField();
        maxSeat = new javax.swing.JTextField();
        serialNumber = new javax.swing.JTextField();
        city = new javax.swing.JTextField();
        modelNumber = new javax.swing.JTextField();
        manufactuerer = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lastUpdated = new javax.swing.JLabel();

        setAutoscrolls(true);

        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial Number", "Model Number", "Manufacturer", "Manufactured Year", "Seating Capacity", "Operating City", "Maintenance Expiry Date", "Is Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCars);

        question_1.setText("Find First Available Car");
        question_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question_1MouseClicked(evt);
            }
        });

        question2.setText("Cars Currently Available");
        question2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question2MouseClicked(evt);
            }
        });
        question2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                question2ActionPerformed(evt);
            }
        });

        question3.setText("List All Cars by Manufacturers");
        question3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question3MouseClicked(evt);
            }
        });
        question3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                question3ActionPerformed(evt);
            }
        });

        question4.setText("List All Cars Manufactured in Year");
        question4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question4MouseClicked(evt);
            }
        });

        question5.setText("List all Cars with Min Seats and Max Seats");
        question5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question5MouseClicked(evt);
            }
        });

        question6.setText("Find Car by Serial Number");
        question6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question6MouseClicked(evt);
            }
        });
        question6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                question6ActionPerformed(evt);
            }
        });

        question7.setText("List All Cars by Model Number");
        question7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question7MouseClicked(evt);
            }
        });

        question8.setText("List All Car Available in a given city");
        question8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question8MouseClicked(evt);
            }
        });

        question9.setText("List All Cars With Expired Maintenance Certificates");
        question9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                question9MouseClicked(evt);
            }
        });

        submitQuery.setText("Submit Query");
        submitQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitQueryMouseClicked(evt);
            }
        });

        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        jButton1.setText("List All Car Manufacturers");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(question4)
                                    .addComponent(question5)
                                    .addComponent(question6)
                                    .addComponent(question8)
                                    .addComponent(question7))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(minSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(maxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(manufacturedYear, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(serialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(modelNumber))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(question2)
                                    .addComponent(question9)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(question_1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(question3)
                                        .addGap(175, 175, 175)
                                        .addComponent(manufactuerer, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(submitQuery)))
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {city, manufactuerer, manufacturedYear, serialNumber});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(question_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(manufactuerer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(question3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(question4)
                    .addComponent(manufacturedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(question5)
                    .addComponent(minSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(question6)
                    .addComponent(serialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(question7)
                    .addComponent(modelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(question8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitQuery)
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(420, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );

        lastUpdated.setText("Last Updated at: " + this.uberFleet.getLastUpdateTime());
    }// </editor-fold>//GEN-END:initComponents

    private void question2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_question2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_question2ActionPerformed

    private void question3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_question3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_question3ActionPerformed

    private void question6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_question6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_question6ActionPerformed

    private void question_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question_1MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        Car c = this.uberFleet.getFirstAvailableCar();
        List<Car> carList = new LinkedList<Car>();
        carList.add(c);
        populateTable(carList);
    }//GEN-LAST:event_question_1MouseClicked

    private void question5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question5MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.minSeat.setVisible(true);
        this.maxSeat.setVisible(true);
        this.submitQuery.setVisible(true);
        this.repaint();
    }//GEN-LAST:event_question5MouseClicked

    private void submitQueryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitQueryMouseClicked
        // TODO add your handling code here:
        if(this.minSeat.isVisible() && this.maxSeat.isVisible()){
            List<Car> carList = this.uberFleet.getAllCarsBySeat(Integer.parseInt(this.minSeat.getText()), Integer.parseInt(this.maxSeat.getText()));
            populateTable(carList);
        }else if(this.city.isVisible()){
            List<Car> carList = this.uberFleet.getAllCarsInCity(this.city.getText());
            populateTable(carList);
        }else if(this.manufactuerer.isVisible()){
            List<Car> carList = this.uberFleet.getAllCarsByManufacturer(this.manufactuerer.getText());
            populateTable(carList);
        }else if(this.manufacturedYear.isVisible()){
            List<Car> carList = this.uberFleet.getAllCarsByManufacturedYear(Integer.parseInt(this.manufacturedYear.getText()));
            populateTable(carList);
        }else if(this.serialNumber.isVisible()){
            List<Car> carList = new LinkedList<>();
            Car c = this.uberFleet.getCarBySerialNumber(this.serialNumber.getText());
            carList.add(c);
            populateTable(carList);
        }else if(this.modelNumber.isVisible()){
            List<Car> carList = this.uberFleet.getAllCarsByModelNumber(this.modelNumber.getText());
            populateTable(carList);
        }
    }//GEN-LAST:event_submitQueryMouseClicked

    private void question6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question6MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.submitQuery.setVisible(true);
        this.serialNumber.setVisible(true);
    }//GEN-LAST:event_question6MouseClicked

    private void question2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question2MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        List<Car> carList = this.uberFleet.getAvailableCars();
        populateTable(carList);
    }//GEN-LAST:event_question2MouseClicked

    private void question3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question3MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.submitQuery.setVisible(true);
        this.manufactuerer.setVisible(true);
    }//GEN-LAST:event_question3MouseClicked

    private void question4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question4MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.submitQuery.setVisible(true);
        this.manufacturedYear.setVisible(true);
    }//GEN-LAST:event_question4MouseClicked

    private void question7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question7MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.submitQuery.setVisible(true);
        this.modelNumber.setVisible(true);
    }//GEN-LAST:event_question7MouseClicked

    private void question8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question8MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        this.submitQuery.setVisible(true);
        this.city.setVisible(true);
    }//GEN-LAST:event_question8MouseClicked

    private void question9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_question9MouseClicked
        // TODO add your handling code here:
        this.hideAllInputs();
        List<Car> carList = this.uberFleet.getAllCarsWithExpiredMaintenance();
        populateTable(carList);
    }//GEN-LAST:event_question9MouseClicked

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        List<String> manufacturers = this.uberFleet.getAllManufacturers();
        JOptionPane.showMessageDialog(this, "Manufacturers: " + String.join(", ", manufacturers));
    }//GEN-LAST:event_jButton1MouseClicked

    private void populateTable(List<Car> carList){
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        for(int i=0;i<carList.size();i++){
            Object[] row = new Object[8];
            row[0] = carList.get(i).getSerialNumber();
            row[1] = carList.get(i).getModelNumber();
            row[2] = carList.get(i).getManufacturer();
            row[3] = carList.get(i).getManufacturedYear();
            row[4] = carList.get(i).getSeats();
            row[5] = carList.get(i).getGeoLocality();
            row[6] = carList.get(i).getMaintenaceExpiry();
            row[7] = carList.get(i).isAvailable();
            
            model.addRow(row);
        }
        
    }
    
    public void hideAllInputs(){
        this.city.setText("");
        this.manufacturedYear.setText("");
        this.serialNumber.setText("");
        this.minSeat.setText("");
        this.maxSeat.setText("");
        this.modelNumber.setText("");
        this.manufactuerer.setText("");
        this.city.setVisible(false);
        this.manufacturedYear.setVisible(false);
        this.serialNumber.setVisible(false);
        this.minSeat.setVisible(false);
        this.maxSeat.setVisible(false);
        this.submitQuery.setVisible(false);
        this.modelNumber.setVisible(false);
        this.manufactuerer.setVisible(false);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField city;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lastUpdated;
    private javax.swing.JTextField manufactuerer;
    private javax.swing.JTextField manufacturedYear;
    private javax.swing.JTextField maxSeat;
    private javax.swing.JTextField minSeat;
    private javax.swing.JTextField modelNumber;
    private javax.swing.JButton question2;
    private javax.swing.JButton question3;
    private javax.swing.JButton question4;
    private javax.swing.JButton question5;
    private javax.swing.JButton question6;
    private javax.swing.JButton question7;
    private javax.swing.JButton question8;
    private javax.swing.JButton question9;
    private javax.swing.JButton question_1;
    private javax.swing.JTextField serialNumber;
    private javax.swing.JButton submitQuery;
    private javax.swing.JTable tblCars;
    // End of variables declaration//GEN-END:variables
}
